# .circleci/config.yml

version: 2.1

orbs:
  macos: circleci/macos@2.2.0

parameters:
  xcode_version:
    type: string
    default: "13.3.1"
  tuist: 
    type: string
    default: "~/.tuist/Versions/3.15.0/tuist"
  tuist_version:
    type: string
    default: "3.15.0"
  test_output_path:
    type: string
    default: "output/tests"

commands:
  install_other:
    steps: 
      - run:
          name: Test Echo
          command: echo "Hello"
  install_tuist:
    steps:
      - run:
          name: Create tuist checksum file
          command: find Project.swift Tuist -type f | xargs -P 2 shasum > Tuist.lock
      - restore_cache:
          name: Restore ~/.tuist
          keys:
            - source-tuist-{{ checksum ".tuist-version" }}-{{ checksum "Tuist.lock" }}
            - source-tuist-{{ checksum ".tuist-version" }}
      - run:
          name: Installing Tuist
          command: |
            [ -f <<pipeline.parameters.tuist>> ] && echo "Skipping tuist install" || bash <(curl -Ls https://install.tuist.io)
      - run:
          name: Install Tuist specific version
          command: |
            [ -f <<pipeline.parameters.tuist>> ] && echo "Skipping tuist install" || tuist install <<pipeline.parameters.tuist_version>>
  setup_tuist:          
    steps: 
      #- run: 
      #    name: Cloud Auth
      #    command: |
      #      <<pipeline.parameters.tuist>> cloud auth
      - run: 
          name: Fetch Dependencies
          command: |
            [ -d Tuist/Dependencies/SwiftPackageManager/.build ] && echo "Skipping fetch" || tuist fetch 
      - run: 
          name: Tuist Cache Warm
          command: TUIST_CONFIG_CLOUD_TOKEN=$TUIST_CLOUD_TOKEN <<pipeline.parameters.tuist>> cache warm -x
      - run: 
          name: Tuist Generate Project
          command: <<pipeline.parameters.tuist>> generate -xn
  build_project:
    steps:
      - run: 
          name: Build Pokedex App
          command: xcodebuild -workspace Pokedex.xcworkspace -scheme Pokedex -destination 'platform=iOS Simulator,name=iPhone 11,OS=15.4'
  run_lint:
    steps: 
      - run:
          name: Tuist Lint 
          command: <<pipeline.parameters.tuist>> lint
  run_tests:
    steps:
      - run: 
          name: Run Tuist Pokedex Tests  
          command: <<pipeline.parameters.tuist>> test --result-bundle-path <<pipeline.parameters.test_output_path>> 
  save_tuist_cache: 
    steps: 
      - save_cache:
          name: Save ~/.tuist
          key: source-tuist-{{ checksum ".tuist-version" }}-{{ checksum "Tuist.lock" }}
          paths:
            - ~/.tuist/Cache
            - ~/.tuist/Versions
  save_dependencies_cache:
    steps:
      - save_cache:
          name: Save Dependencies
          key: dependencies-tuist-{{ checksum "Tuist/Dependencies.swift" }}
          paths: 
            - Tuist/Dependencies
  restore_dependencies_cache:
    steps:
      - restore_cache:
          name: Restore Dependencies
          keys: 
            - dependencies-tuist-{{ checksum "Tuist/Dependencies.swift" }}
            - dependencies-tuist-
jobs:    
  build_and_test:
    macos: 
      xcode: <<pipeline.parameters.xcode_version>>
    steps:
      - checkout
      - install_tuist 
      - restore_dependencies_cache
      - setup_tuist
      - save_dependencies_cache
      - run_lint
      - run_tests
      - store_test_results:
          path: <<pipeline.parameters.test_output_path>> 
      - save_tuist_cache

workflows: 
  build_and_test_workflow:
    jobs: 
      - build_and_test