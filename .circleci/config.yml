# .circleci/config.yml

version: 2.1

orbs:
  macos: circleci/macos@2.2.0

commands:
  install_swiftlint:
    steps:
      - run:
          name: Install SwiftLint
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install swiftlint 

  install_tuist:
    steps:
      - run: 
          name: Create test hashes file
          command: |
            [ -d ~/.tuist/Cache/TestsCache ] && ~/.tuist/Cache/TestsCache > test_hashes.txt || touch test_hashes.txt
      - run:
          name: Create tuist checksum file
          command: find Project.swift Tuist test_hashes.txt -type f | xargs -P 2 shasum > Tuist.lock
      - restore_cache:
          name: Restore ~/.tuist
          keys:
            - source-tuist-{{ checksum ".tuist-version" }}-{{ checksum "Tuist.lock" }}
            - source-tuist-{{ checksum ".tuist-version" }}
      - run:
          name: Installing Tuist
          command: |
            [ ! -f ~/.tuist/Versions/3.2.0/tuist ] && bash <(curl -Ls https://install.tuist.io) || echo "Skipping tuist install"
      - run:
          name: Install Tuist specific version
          command: |
            [ ! -f ~/.tuist/Versions/3.2.0/tuist ] && tuist install 3.2.0 || echo "Skipping tuist install version"
            
  setup_tuist:          
    steps: 
      - run: 
          name: Fetch Dependencies
          command: |
            ~/.tuist/Versions/3.2.0/tuist fetch 
      - run: 
          name: Tuist Cache Warm
          command: ~/.tuist/Versions/3.2.0/tuist cache warm -x
      - run: 
          name: Tuist Generate Project
          command: ~/.tuist/Versions/3.2.0/tuist generate -xn
 
  build_project:
    steps:
      - run: 
          name: Build Pokedex App
          command: xcodebuild -workspace Pokedex.xcworkspace -scheme Pokedex -destination 'platform=iOS Simulator,name=iPhone 11,OS=15.4'
          
  run_tests:
    steps:
      - run: 
          name: Run Tuist Pokedex Tests  
          command: ~/.tuist/Versions/3.2.0/tuist test
          
  save_tuist_cache: 
    steps: 
      - run: 
          name: Create test hashes file
          command: |
            [ -d ~/.tuist/Cache/TestsCache ] && ~/.tuist/Cache/TestsCache > test_hashes.txt || touch test_hashes.txt
      - run:
          name: Create tuist checksum file
          command: find Project.swift Tuist test_hashes.txt -type f | xargs -P 2 shasum > Tuist.lock
      - save_cache:
          name: Save ~/.tuist
          key: source-tuist-{{ checksum ".tuist-version" }}-{{ checksum "Tuist.lock" }}
          paths:
            - ~/.tuist/Cache
            - ~/.tuist/Versions
            
jobs:    
  build_and_test:
    macos: 
      xcode: 13.3.1
    steps:
      - checkout  
      - install_swiftlint
      - install_tuist 
      - setup_tuist
      - build_project
      - run_tests
      - save_tuist_cache

workflows: 
  build_and_test_workflow:
    jobs: 
      - build_and_test
